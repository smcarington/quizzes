"""
Django settings for quiz_module project.

Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os,socket,math,random

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '1f@)#j@ruuv&azgoqlkav86^$&p4*d3i77x$zx2e#e!@w#k10#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_tables2',
    'guardian',
    'quizzes',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'quizzes.middleware.UtorAuthMiddleware.UtorAuthMiddleware',
]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.RemoteUserBackend',
    'django.contrib.auth.backends.ModelBackend',
    'guardian.backends.ObjectPermissionBackend',
]

SHIBBOLETH_ATTRIBUTE_MAP = {
    "utorid": (True, "username"),
}

ROOT_URLCONF = 'quiz_module.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'quiz_module.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/
LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Toronto'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'

# Project Specific Settings
LOGIN_URL = "/accounts/login/"
LOGIN_REDIRECT_URL = "/courses/"
LOGOUT_REDIRECT_URL = "/courses/"

URL_PREPEND = ''
SITE_NAME = ''
SITE_URL = ''
NOTES_URL = ''
NOTE_ROOT = '/tmp/'
MEDIA_URL  = '/media/'
LATEX_ROOT = '/home/tholden/djangotest/latex'
LOG_ROOT = '/tmp'
MARKS_LOG = "/".join([LOG_ROOT, 'marks_log.log'])
SENDFILE_BACKEND = 'sendfile.backends.development'

# For websockets we need to define the CHANNEL_LAYERS setting

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "asgi_redis.RedisChannelLayer",
        "CONFIG": {
            "hosts": [os.environ.get('REDIS_URL', 'redis://localhost:6379')],
        },
        "ROUTING": "polls.routing.channel_routing",
    },
}


UNIVERSAL_CONSTANTS =  {"pi": math.pi, "e": math.e}
PREDEFINED_FUNCTIONS = {"sin": lambda x: math.sin(x),
                        "cos": lambda x: math.cos(x),
                        "tan": lambda x: math.tan(x),
                        "ln": lambda x: math.log(x, math.e),
                        "rand": lambda x,y: random.randint(x,y),
                        "Rand": lambda x,y: NZRandInt(x,y),
                        "uni": lambda x,y,z: round(random.uniform(x,y),z),
                        "gobble": lambda *args: 1,
                        }

def NZRandInt(x,y):
    """ Generates a random non-zero number between x and y """
    if x>0: # Behave like normal if x>0
        return random.randint(x,y)
    else:
        if random.randint(0,1):
            return random.randint(x,-1)
        else:
            return random.randint(1,y)
# Get local settings
try:
    from .local_settings import *
except ImportError as e:
    print('No local settings detected')

